#Exercice 1.6 : Écrire un algorithme permettant d’échanger les valeurs de deux variables A et B, et ce quel que soit leur contenu préalable.
#Exemple : A vaut 1, B vaut 2. En fin de traitement, A doit valoir 2 et B doit valoir 1

Solution n°1 :
A entier
B entier
C entier
Début
A ← 1
B ← 2
C ← B
B ← A
A ← C
Fin

Solution n°2 :
Début
A ← A + B
B ← A – B
A ← A – B
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 1.7 : Écrire un algorithme transférant à B la valeur de A, à C la valeur de B et à A la valeur de C
#(toujours quels que soient les contenus préalables de ces variables).

Solution n°1 :
A     entier
B     entier
C     entier
D     entier
Début
A ← 1
B ← 2
C ← 3
D ← A
A ← C
C ← B
B ← D
A = 3, B =1, C = 2
Fin

Solution n°2 :
Début
C ← A + B + C
A ← C – (B + A)
B ← C – (B + A)
C ← C – (B + A)
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 2.2 : Écrire un programme qui demande un nombre à l’utilisateur, puis qui calcule et affiche le carré de ce nombre.
NBRE     entier
CARRE    entier
Début
Écrire « entrer un nombre : »
Lire NBRE
CARRE ← NBRE * NBRE
Écrire « son carré est : » CARRE
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 2.3 : Écrire un programme qui demande son prénom à l'utilisateur, et qui lui réponde par un charmant « Bonjour » suivi du prénom
PRENOM   alphanumérique
Début
Écrire « quel est ton prénom : »
Lire PRENOM
Écrire « Bonjour, » PRENOM « ! »
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 2.4 : Écrire un programme qui lit le prix HT d’un article, le nombre d’articles et le taux de TVA, et qui fournit le prix
#total TTC correspondant. Faire en sorte que des libellés apparaissent clairement.
NOMBRE           entier
PRIX-HT          numérique
TAUX-TVA         numérique
PRIX-TOTAL-TTC   numérique
Début
Écrire « Entrer le prix HT : »
Lire PRIX-HT
Écrire « Entrer le nombre d'articles : »
Lire NOMBRE
Écrire « Entrer le taux de TVA (en pourcentage) : »
Lire TAUX-TVA
PRIX-TTC ← NOMBRE * PRIX-HT * (1 + TAUX-TVA / 100)
Écrire « Prix total TTC : » PRIX-TOTAL-TTC
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.1 : Écrire un algorithme qui demande un nombre à l’utilisateur, et l’informe ensuite si ce nombre est positif ou
#négatif (on laisse de côté le cas où le nombre vaut zéro).
NOMBRE   entier signé
Début
écrire « Entrer un nombre différent de 0 : »
Lire NOMBRE
Si NOMBRE > 0
  écrire « Nombre positif »
sinon
  écrire « Nombre négatif »
finsi
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.2 : Écrire un algorithme qui demande deux nombres à l’utilisateur et l’informe ensuite si leur produit est négatif ou
#positif (on laisse de côté le cas où le produit est nul). Attention toutefois : on ne doit pas calculer le produit des deux nombres.
N1     entier signé
N2     entier signé
Début
Écrire « Entrer un premier nombre : »
Lire N1
Écrire « Entrer un second nombre : »
Lire N2
Si (N1>0etN2>0)ou(N1<0etN2<0)
  écrire « le produit est positif »
sinon
  écrire « le produit est négatif »
finsi
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.3 : Écrire un algorithme qui demande trois noms à l’utilisateur et l’informe ensuite s’ils sont rangés ou non dans
#l’ordre alphabétique.
NOM1   alphabétique
NOM2   alphabétique
NOM3   alphabétique
Début
Écrire « Saisir un premier nom : »
Lire NOM1
Écrire « Saisir un second nom : »
Lire NOM2
Écrire « Saisir un troisième nom : »
Lire NOM3
Si NOM1 < NOM2 et NOM2 < NOM3
  écrire « ordre alphabétique »
sinon
  écrire « ordre non alphabétique »
finsi
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.4 : Écrire un algorithme qui demande un nombre à l’utilisateur, et l’informe ensuite si ce nombre est positif ou
#négatif (on inclut cette fois le traitement du cas où le nombre vaut zéro).
NBR     entier signé
Début
Écrire « Entrer un nombre : »
Lire NBR
Si NBR = 0
  écrire « le nombre est nul »
sinon
  si NBR > 0
    écrire « le nombre est positif »
  sinon
    écrire « le nombre est négatif »
  finsi
finsi
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.5 : Écrire un algorithme qui demande deux nombres à l’utilisateur et l’informe ensuite si le produit est négatif ou
#positif (on inclut cette fois le traitement du cas où le produit peut être nul). Attention toutefois, on ne doit pas calculer
#le produit !
N1     entier signé
N2     entier signé
Début
Écrire « Entrer un premier nombre : »
Lire N1
Écrire « Entrer un second nombre : »
Lire N2
Si N1 = 0 ou N2 = 0
  écrire « le produit est nul »
sinon
  si (N1>0etN2>0)ou(N1<0etN2<0)
    écrire « le produit est positif »
  sinon
    écrire « le produit est négatif »
  finsi
finsi
Fin

----------------------------------------------------------------------------------------------------------------------------------

#Exercice 3.6 : Écrire un algorithme qui demande l’âge d’un enfant à l’utilisateur. Ensuite, il l’informe de sa catégorie :
#"Poussin" de 6 à 7 ans ; "Pupille" de 8 à 9 ans ; "Minime" de 10 à 11 ans ; "Cadet" après 12 ans
AGE     entier
Début
Écrire « Entrer l'âge : »
Lire AGE
A) si AGE >= 12
      écrire « Cadet »
   sinon
B)    si AGE >= 10
         écrire « minime »
      sinon
C)       si AGE >= 8
            écrire « pupille »
         sinon
D)          si AGE >= 6
               écrire « poussin »
E)          sinon 
               écrire "moins de 6 ans"
            finsi
         finsi
      finsi
   finsi
Fin

Jeu de test : Conditions testées par l'ordinateur selon l'âge
AGE = 1  ; Condition = A,B,C,D,E
AGE = 6  ; Condition = A,B,C,D
AGE = 7  ; Condition = A,B,C,D
AGE = 8  ; Condition = A,B,C
AGE = 9  ; Condition = A,B,C
AGE = 10 ; Condition = A,B
AGE = 11 ; Condition = A,B
AGE = 12 ; Condition = A
AGE = 13 ; Condition = A


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.1 : Formulez un algorithme équivalent à l’algorithme suivant :
Si Tutu > Toto + 4 OU Tata = "OK" Alors
    Tutu ← Tutu + 1
Sinon
    Tutu ← Tutu – 1
Finsi

Début
Si TUTU <= (TOTO + 4) et TATA <> « OK »
    TUTU ← TUTU - 1
sinon
    TUTU ← TUTU + 1
finsi
Fin

Jeu de test : Conditions testées par l'ordinateur selon les valeurs de TUTU, TOTO et TATA

|                   |      A      |   B  |      |
| Condition testée  | TUTU ; TOTO | TATA | TUTU |
|-------------------|-------------|------|------|
| A ou B            |   6  |   1  |  OK  |   7  |
| A ou non B        |   6  |   1  |  KO  |   7  |
| Non A ou B        |   4  |   1  |  OK  |   5  |
| Non A ou non B    |   4  |   1  |  KO  |   3  |



----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.2 : Cet algorithme est destiné à prédire l'avenir, et il doit être infaillible !
#Il lira au clavier l’heure et les minutes, et il affichera l’heure qu’il sera une minute plus tard.
#Par exemple, si l'utilisateur tape 21 puis 32, l'algorithme doit répondre :
#"Dans une minute, il sera 21 heure(s) 33".
#NB : on suppose que l'utilisateur entre une heure valide. Pas besoin donc de la vérifier.

HEURE entier
MINUTE entier
Début
Écrire « Entrer l'heure : »
Lire HEURE
Écrire « Entrer les minutes : »
Lire MINUTE
Si MINUTE = 59
   MINUTE ← 0
   si HEURE = 23
       HEURE ← 0
   sinon
       HEURE ← HEURE + 1
   finsi
sinon
    MINUTE ← MINUTE + 1
finsi
Écrire « Dans une minute il sera » HEURE « h » MINUTE « mn »
Fin

Jeu de test :

| HEURE(S) | MINUTE(S) | HEURE(S) | MINUTE(S) |
|----------|-----------|----------|-----------|
|    01    |     01    |    01    |     02    |
|    01    |     59    |    02    |     00    |
|    23    |     01    |    23    |     02    |
|    23    |     59    |    00    |     00    |


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.3 : De même que le précédent, cet algorithme doit demander une heure et en afficher une autre. Mais cette fois,
#il doit gérer également les secondes, et afficher l'heure qu'il sera une seconde plus tard.
#NB : là encore, on suppose que l'utilisateur entre une date valide.

HEURE entier
MINUTE entier
SECONDE entier
Début
Écrire « Entrer l'heure : »
Lire HEURE
Écrire « Entrer les minutes : »
Lire MINUTE
Écrire « Entrer les secondes : »
Lire SECONDE
SECONDE ← SECONDE + 1
si SECONDE = 60
    SECONDE ← 0
    MINUTE ← MINUTE + 1
finsi
si MINUTE = 60
    MINUTE ← 0
    HEURE ← HEURE + 1
finsi
Si HEURE = 24
    HEURE ← 0
finsi
Écrire « Dans une minute il sera » HEURE « h » MINUTE « mn » SECONDE « s »
Fin

Jeu de test :

| HEURE(S) | MINUTE(S) | SECONDE(S) | HEURE(S) | MINUTE(S) | SECONDE(S) |
|----------|-----------|------------|----------|-----------|------------|
|    01    |     01    |     01     |    01    |     01    |     02     |
|    01    |     01    |     59     |    01    |     02    |     00     |
|    01    |     59    |     01     |    01    |     59    |     02     |
|    01    |     59    |     59     |    02    |     00    |     00     |
|    23    |     01    |     01     |    23    |     01    |     02     |
|    23    |     01    |     59     |    23    |     02    |     00     |
|    23    |     59    |     01     |    23    |     59    |     02     |
|    23    |     59    |     59     |    00    |     00    |     00     |


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.4 : Un magasin de reprographie facture 0,10 E les dix premières photocopies, 0,09 E les vingt suivantes et 0,08 E au-delà.
#Écrivez un algorithme qui demande à l’utilisateur le nombre de photocopies effectuées et qui affiche la facture correspondante.

NBRE entier
PRIX entier
Début
Écrire « Nombre de photocopies effectuées : »
Lire NBRE
si NBRE <= 10
    PRIX ← NBRE * 0,10
sinon
    si NBRE <= 30
        PRIX ← (10 * 0,10) + ((NBRE – 10) * 0,09)
    sinon
        PRIX ← (10 * 0,10) + (20 * 0,09) + ((NBRE – 30) * 0,08)
    finsi
finsi
Écrire « le prix est : » PRIX
Fin

Jeu de test :

|  NBRE  |  PRIX  |
|--------|--------|
|    4   |  0,40  |
|   22   |  2,08  |
|   40   |   3,6  |


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.5 : Les habitants de Zorglub paient l’impôt selon les règles suivantes :
# • les hommes de plus de 20 ans paient l’impôt
# • les femmes paient l’impôt si elles ont entre 18 et 35 ans
# • les autres ne paient pas d’impôt
#Le programme demandera donc l’âge et le sexe du Zorglubien, et se prononcera donc ensuite sur le fait que l’habitant est imposable.

AGE entier
SEXE alphanumérique
Début
Écrire « Homme ou Femme (H ou F) ? : »
Lire SEXE
Écrire « Age : »
Lire AGE
si (SEXE = 'H' et AGE > 20) ou (SEXE = 'F' et AGE > 17 et AGE < 36)
    écrire « imposable »
sinon
    écrire « non imposable »
finsi
fin

Jeu de test :

|  SEXE  |  AGE  | IMPOSABLE ? |
|--------|-------|-------------|
|   H    |   20  |     NON     |
|   H    |   21  |     OUI     |
|   F    |   17  |     NON     |
|   F    |   18  |     OUI     |
|   F    |   36  |     NON     |


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.6 : Écriture d'un algorithme qui permet la saisie des scores de quatre candidats au premier tour des élections.
#Il traitera ensuite le candidat numéro 1 (et uniquement lui) pour dire s'il est élu, battu, ballotage favorable ou défavorable
#Règle suivante pour les élections :
# • lorsque l'un des candidats obtient plus de 50% des suffrages, il est élu dès le premier tour.
# • en cas de deuxième tour, peuvent participer uniquement les candidats ayant obtenu au moins 12,5% des voix au premier tour.

SCORE1     entiers
SCORE2     entiers
SCORE3     entiers
SCORE4     entiers
Début
Écrire « Score du candidat 1 (en pourcentage des suffrages) : »
Lire SCORE1
Écrire « Score du candidat 2 (en pourcentage des suffrages) : »
Lire SCORE2
Écrire « Score du candidat 3 (en pourcentage des suffrages) : »
Lire SCORE3
Écrire « Score du candidat 4 (en pourcentage des suffrages) : » lire SCORE4
si SCORE1 > 50
      écrire « candidat 1 élu »
sinon
      si SCORE1 < 12,5 ou SCORE2 > 50 ou SCORE3 > 50 ou SCORE4 > 50
          écrire « candidat 1 éliminé »
      sinon
          si SCORE1 > SCORE2 et SCORE1 > SCORE3 et SCORE1 > SCORE4
              écrire « candidat 1 en ballottage favorable »
          sinon
              écrire « candidat 1 en ballottage défavorable »
          finsi
      finsi
finsi
Fin

Jeu de test :

| SCORE1 | SCORE2 | SCORE3 | SCORE4 |                RESULTAT              |
|--------|--------|--------|--------|--------------------------------------|
|   51   |   10   |   10   |   29   | Candidat 1 élu                       |
|   20   |   51   |   10   |   19   | Candidat 1 éliminé                   |
|   20   |   20   |   20   |   40   | Candidat 1 en ballottage défavorable |
|   40   |   20   |   20   |   20   | Candidat 1 en ballottage favorable   |
|   10   |   30   |   30   |   30   | Candidat 1 éliminé                   |


----------------------------------------------------------------------------------------------------------------------------------

#Exercice 4.7 : 



----------------------------------------------------------------------------------------------------------------------------------
